{"version":3,"sources":["components/ShopCard.jsx","routes/ShopCart.jsx"],"names":["connect","props","title","price","id","availableSizes","style","sku","dispatch","menu","map","item","Item","key","onClick","size","type","payload","handleAddToCart","className","src","alt","width","height","whiteSpace","overflow","split","toFixed","overlay","placement","trigger","ShopCart","state","visible","active","this","setState","index","value","count","data","e","products","shop","carts","cart","loading","handleOrderList","bind","closable","maskClosable","mask","onClose","fontWeight","onChange","handleChangeCount","length","reduce","init","onConfirm","handleClearCart","okText","cancelText","marginTop","danger","justify","span","GithubOutlined","fontSize","margin","textAlign","padding","boxSizing","display","alignItems","justifyContent","arrow","marginRight","DownOutlined","ShoppingCartOutlined","cursor","xs","lg","md","xl","xxl","handleChooseSize","React","Component","effects"],"mappings":"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","file":"static/js/4.f481d6dd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ShopCard.less\";\r\nimport { Button, Menu, Dropdown } from \"antd\";\r\nimport { connect } from \"dva\";\r\n\r\nconst ShopCard = (props) => {\r\n  const { title, price, id, availableSizes, style, sku, dispatch } = props;\r\n  const handleAddToCart = (size) => {\r\n    dispatch({\r\n      type: \"cart/add\",\r\n      payload: { id, title, price, size, sku, style },\r\n    });\r\n  };\r\n  const menu = (\r\n    <Menu>\r\n      {availableSizes.map((item) => (\r\n        <Menu.Item key={item} onClick={() => handleAddToCart(item)}>\r\n          <span>{item}</span>\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n  return (\r\n    <div className=\"shop-card\">\r\n      <img\r\n        src={`./static/products/${sku}_1.jpg`}\r\n        alt=\"\"\r\n        width=\"180\"\r\n        height=\"240\"\r\n      />\r\n      <h3\r\n        style={{\r\n          whiteSpace: \"nowrap\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        {title}\r\n      </h3>\r\n      <h4>{style}</h4>\r\n      <div className=\"price\">\r\n        $<span className=\"before\">{`${price}`.split(\".\")[0]}</span>\r\n        {`.${price.toFixed(2).split(\".\")[1]}`}\r\n      </div>\r\n      <Dropdown overlay={menu} placement=\"topRight\" trigger=\"click\">\r\n        <Button type=\"primary\" style={{ width: \"100%\" }}>\r\n          Add to Cart\r\n        </Button>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect()(ShopCard);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { connect } from \"dva\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Badge,\r\n  Drawer,\r\n  InputNumber,\r\n  Menu,\r\n  Dropdown,\r\n  Popconfirm,\r\n  Spin,\r\n} from \"antd\";\r\nimport {\r\n  ShoppingCartOutlined,\r\n  GithubOutlined,\r\n  DownOutlined,\r\n} from \"@ant-design/icons\";\r\nimport ShopCard from \"../components/ShopCard\";\r\nimport \"../index.css\";\r\n\r\nconst mapStateToProps = ({ shop, cart, loading }) => {\r\n  return {\r\n    shop: shop,\r\n    cart: cart,\r\n    loading: loading.effects[\"shop/getData\"],\r\n  };\r\n};\r\n\r\nconst size = [\"XS\", \"S\", \"M\", \"ML\", \"L\", \"XL\", \"XXL\"];\r\n\r\nclass ShopCart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      active: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: \"shop/getData\",\r\n    });\r\n    dispatch({\r\n      type: \"cart/getData\",\r\n    });\r\n  }\r\n\r\n  handleClearCart() {\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: \"cart/clear\",\r\n    });\r\n    this.setState({ visible: false });\r\n  }\r\n\r\n  handleChooseSize(size, index) {\r\n    const { active } = this.state;\r\n    const { dispatch } = this.props;\r\n    if (active === index) {\r\n      dispatch({\r\n        type: \"shop/getData\",\r\n      });\r\n      return this.setState({ active: null });\r\n    } else {\r\n      dispatch({\r\n        type: \"shop/filter\",\r\n        payload: size,\r\n      });\r\n      return this.setState({ active: index });\r\n    }\r\n  }\r\n\r\n  handleChangeCount(value, item) {\r\n    if (typeof value !== \"number\") return;\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: \"cart/changeCount\",\r\n      payload: { count: value, data: item },\r\n    });\r\n  }\r\n\r\n  handleOrderList(e) {\r\n    const { key } = e;\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: \"shop/sort\",\r\n      payload: { key },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      shop: { products },\r\n      cart: { carts },\r\n      loading,\r\n    } = this.props;\r\n    const { active } = this.state;\r\n    const { visible } = this.state;\r\n    const menu = (\r\n      <Menu onClick={this.handleOrderList.bind(this)}>\r\n        <Menu.Item key=\"up\">升序</Menu.Item>\r\n        <Menu.Item key=\"down\">降序</Menu.Item>\r\n      </Menu>\r\n    );\r\n    return (\r\n      <>\r\n        <Drawer\r\n          closable\r\n          maskClosable\r\n          mask\r\n          visible={visible}\r\n          onClose={() => {\r\n            this.setState({ visible: false });\r\n          }}\r\n          width=\"375\"\r\n          height=\"100%\"\r\n        >\r\n          <div style={{ height: \"100px\" }}>\r\n            <h1>购物车</h1>\r\n          </div>\r\n          <div className=\"cart-content\">\r\n            {carts?.map((item) => {\r\n              return (\r\n                <div key={item.id + item.size} className=\"cart-item\">\r\n                  <div>\r\n                    <img\r\n                      src={`./static/products/${item.sku}_1.jpg`}\r\n                      alt=\"\"\r\n                      height=\"80\"\r\n                    ></img>\r\n                  </div>\r\n                  <div className=\"description\">\r\n                    <div style={{ fontWeight: \"bold\" }}>{item.title}</div>\r\n                    <div>\r\n                      {item.size} | {item.style}\r\n                    </div>\r\n                    <div className=\"description-number\">\r\n                      <div>${item.price.toFixed(2)} </div>\r\n                      <InputNumber\r\n                        value={item.count}\r\n                        onChange={(value) =>\r\n                          this.handleChangeCount(value, item)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div style={{ height: \"100px\" }}>\r\n            {carts?.length > 0 && (\r\n              <div>\r\n                <div>\r\n                  <div>\r\n                    <h1>\r\n                      共计：$\r\n                      {carts\r\n                        ?.reduce(\r\n                          (init, item) => init + item.count * item.price,\r\n                          0\r\n                        )\r\n                        .toFixed(2) || 0}\r\n                    </h1>\r\n                  </div>\r\n                </div>\r\n                <Popconfirm\r\n                  placement=\"top\"\r\n                  title={`共计：$${\r\n                    carts\r\n                      ?.reduce(\r\n                        (init, item) => init + item.count * item.price,\r\n                        0\r\n                      )\r\n                      .toFixed(2) || 0\r\n                  }是否结账？`}\r\n                  onConfirm={this.handleClearCart.bind(this)}\r\n                  okText=\"是\"\r\n                  cancelText=\"否\"\r\n                >\r\n                  <Button\r\n                    type=\"primary\"\r\n                    style={{ width: \"100%\", marginTop: \"5px\" }}\r\n                  >\r\n                    结账\r\n                  </Button>\r\n                </Popconfirm>\r\n                <Popconfirm\r\n                  placement=\"top\"\r\n                  title={\"确认清空购物车\"}\r\n                  onConfirm={this.handleClearCart.bind(this)}\r\n                  okText=\"是\"\r\n                  cancelText=\"否\"\r\n                >\r\n                  <Button\r\n                    type=\"primary\"\r\n                    danger\r\n                    style={{ width: \"100%\", marginTop: \"5px\" }}\r\n                    // onClick={this.handleClearCart.bind(this)}\r\n                  >\r\n                    清空购物车\r\n                  </Button>\r\n                </Popconfirm>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Drawer>\r\n        <Row justify=\"space-between\">\r\n          <Col span={12}>\r\n            <GithubOutlined style={{ fontSize: \"48px\", margin: \"20px\" }} />\r\n          </Col>\r\n          <Col span={12} style={{ textAlign: \"right\" }}>\r\n            <div\r\n              style={{\r\n                padding: \"20px\",\r\n                boxSizing: \"border-box\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <Dropdown overlay={menu} arrow trigger=\"click\">\r\n                <Button style={{ marginRight: \"20px\" }}>\r\n                  排序 <DownOutlined />\r\n                </Button>\r\n              </Dropdown>\r\n              <Badge\r\n                count={carts?.reduce((init, item) => {\r\n                  return init + item.count;\r\n                }, 0)}\r\n              >\r\n                <ShoppingCartOutlined\r\n                  style={{ fontSize: \"48px\", cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    this.setState({ visible: true });\r\n                  }}\r\n                />\r\n              </Badge>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={24} lg={4} md={6} xl={6} xxl={6}>\r\n            <div className=\"size-map\">\r\n              <h2>Size:</h2>\r\n              {size.map((item, index) => {\r\n                return (\r\n                  <div\r\n                    key={item}\r\n                    className={`size-item ${\r\n                      index === active ? \"size-item-active\" : \"\"\r\n                    }`}\r\n                    onClick={this.handleChooseSize.bind(this, item, index)}\r\n                  >\r\n                    {item}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </Col>\r\n          <Col xs={24} lg={20} md={18} xl={18} xxl={18}>\r\n            {loading ? (\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <Spin />\r\n              </div>\r\n            ) : (\r\n              <Row>\r\n                {products.map((item, index) => {\r\n                  return (\r\n                    <Col xs={24} md={12} lg={12} xl={8} xxl={6} key={index}>\r\n                      <ShopCard {...item}></ShopCard>\r\n                    </Col>\r\n                  );\r\n                })}\r\n              </Row>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShopCart);\r\n"],"sourceRoot":""}