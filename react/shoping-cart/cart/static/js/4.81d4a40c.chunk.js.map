{"version":3,"sources":["models/cart.js","components/ShopCard.jsx","routes/ShopCart.jsx"],"names":["namespace","state","carts","subscriptions","effects","reducers","getData","payload","localStorage","getItem","JSON","parse","add","data","newData","count","json","stringify","setItem","findIndex","value","id","size","newArr","changeCount","clear","connect","props","title","price","availableSizes","style","sku","dispatch","menu","map","item","Item","key","onClick","type","handleAddToCart","className","src","alt","width","height","whiteSpace","overflow","split","toFixed","overlay","placement","ShopCart","visible","active","this","setState","index","products","shop","cart","closable","maskClosable","mask","onClose","fontWeight","onChange","handleChangeCount","reduce","init","marginTop","handleClearCart","bind","danger","justify","span","GithubOutlined","fontSize","margin","textAlign","padding","boxSizing","ShoppingCartOutlined","cursor","xs","lg","md","xl","xxl","handleChooseSize","React","Component"],"mappings":"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","file":"static/js/4.81d4a40c.chunk.js","sourcesContent":["export default {\r\n  namespace: \"cart\",\r\n\r\n  state: {\r\n    carts: null,\r\n  },\r\n\r\n  subscriptions: {},\r\n\r\n  effects: {\r\n    // *getData(action, { call, put }) {\r\n    //   const data = localStorage.getItem(\"cart\");\r\n    //   yield put({ type: \"save\", payload: data });\r\n    // },\r\n  },\r\n\r\n  reducers: {\r\n    getData(state, { payload }) {\r\n      // 保存数据到 state\r\n      const data = localStorage.getItem(\"cart\");\r\n      if (data) {\r\n        return { carts: JSON.parse(localStorage.getItem(\"cart\")) };\r\n      }\r\n      return { carts: null };\r\n    },\r\n    add(state, { payload: data }) {\r\n      const { carts } = state;\r\n      if (!carts && data) {\r\n        const newData = { ...data, count: 1 };\r\n        const json = JSON.stringify([newData]);\r\n        localStorage.setItem(\"cart\", json);\r\n        return { carts: [newData] };\r\n      }\r\n      const findIndex = carts.findIndex((value) => {\r\n        return value.id === data.id && value.size === data.size;\r\n      });\r\n      if (findIndex !== -1) {\r\n        let newArr = [...carts];\r\n        newArr[findIndex] = {\r\n          ...newArr[findIndex],\r\n          count: newArr[findIndex].count + 1,\r\n        };\r\n        const json = JSON.stringify(newArr);\r\n        localStorage.setItem(\"cart\", json);\r\n        return { carts: newArr };\r\n      }\r\n      const newData = { ...data, count: 1 };\r\n      const json = JSON.stringify([...carts, newData]);\r\n      localStorage.setItem(\"cart\", json);\r\n      return { carts: [...carts, newData] };\r\n    },\r\n    changeCount(state, { payload }) {\r\n      const { carts } = state;\r\n      const { count, data } = payload;\r\n      const findIndex = carts.findIndex((value) => {\r\n        return value.id === data.id && value.size === data.size;\r\n      });\r\n      let newArr = [...carts];\r\n      newArr[findIndex] = {\r\n        ...newArr[findIndex],\r\n        count: count,\r\n      };\r\n      const json = JSON.stringify(newArr);\r\n      localStorage.setItem(\"cart\", json);\r\n      return { carts: newArr };\r\n    },\r\n    clear(state, { payload: data }) {\r\n      localStorage.setItem(\"cart\", []);\r\n      return { ...state, carts: null };\r\n    },\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport \"./ShopCard.less\";\r\nimport { Button, Menu, Dropdown } from \"antd\";\r\nimport { connect } from \"dva\";\r\n\r\nconst ShopCard = (props) => {\r\n  const { title, price, id, availableSizes, style, sku, dispatch } = props;\r\n  const handleAddToCart = (size) => {\r\n    dispatch({\r\n      type: \"cart/add\",\r\n      payload: { id, title, price, size, sku, style },\r\n    });\r\n  };\r\n  const menu = (\r\n    <Menu>\r\n      {availableSizes.map((item) => (\r\n        <Menu.Item key={item} onClick={() => handleAddToCart(item)}>\r\n          <span>{item}</span>\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n  return (\r\n    <div className=\"shop-card\">\r\n      <img\r\n        src={`./static/products/${sku}_1.jpg`}\r\n        alt=\"\"\r\n        width=\"180\"\r\n        height=\"240\"\r\n      />\r\n      <h3\r\n        style={{\r\n          whiteSpace: \"nowrap\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        {title}\r\n      </h3>\r\n      <h4>{style}</h4>\r\n      <div className=\"price\">\r\n        $<span className=\"before\">{`${price}`.split(\".\")[0]}</span>\r\n        {`.${price.toFixed(2).split(\".\")[1]}`}\r\n      </div>\r\n      <Dropdown overlay={menu} placement=\"topRight\">\r\n        <Button type=\"primary\" style={{ width: \"100%\" }}>\r\n          Add to Cart\r\n        </Button>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect()(ShopCard);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { connect } from \"dva\";\r\nimport { Button, Row, Col, Badge, Drawer, InputNumber } from \"antd\";\r\nimport { ShoppingCartOutlined, GithubOutlined } from \"@ant-design/icons\";\r\nimport ShopCard from \"../components/ShopCard\";\r\nimport \"../index.css\";\r\nimport cart from \"../models/cart\";\r\n\r\nconst mapStateToProps = ({ shop, cart }) => {\r\n  return { shop: shop, cart: cart };\r\n};\r\nconst size = [\"XS\", \"S\", \"M\", \"ML\", \"L\", \"XL\", \"XXL\"];\r\nclass ShopCart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      active: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: \"shop/getData\",\r\n    });\r\n    dispatch({\r\n      type: \"cart/getData\",\r\n    });\r\n  }\r\n  handleClearCart() {\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: \"cart/clear\",\r\n    });\r\n    this.setState({ visible: false });\r\n  }\r\n  handleChooseSize(size, index) {\r\n    const { active } = this.state;\r\n    const { dispatch } = this.props;\r\n    if (active === index) {\r\n      dispatch({\r\n        type: \"shop/getData\",\r\n      });\r\n      return this.setState({ active: null });\r\n    } else {\r\n      dispatch({\r\n        type: \"shop/filter\",\r\n        payload: size,\r\n      });\r\n      return this.setState({ active: index });\r\n    }\r\n  }\r\n  handleChangeCount(value, item) {\r\n    if (typeof value !== \"number\") return;\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: \"cart/changeCount\",\r\n      payload: { count: value, data: item },\r\n    });\r\n  }\r\n  render() {\r\n    const {\r\n      shop: { products },\r\n      cart: { carts },\r\n    } = this.props;\r\n    const { active } = this.state;\r\n    const { visible } = this.state;\r\n    return (\r\n      <>\r\n        <Drawer\r\n          closable\r\n          maskClosable\r\n          mask\r\n          visible={visible}\r\n          onClose={() => {\r\n            this.setState({ visible: false });\r\n          }}\r\n          width=\"375\"\r\n          height=\"100%\"\r\n        >\r\n          <div style={{ height: \"100px\" }}>\r\n            <h1>购物车</h1>\r\n          </div>\r\n          <div className=\"cart-content\">\r\n            {carts?.map((item) => {\r\n              return (\r\n                <div key={item.id + item.size} className=\"cart-item\">\r\n                  <div>\r\n                    <img\r\n                      src={`./static/products/${item.sku}_1.jpg`}\r\n                      alt=\"\"\r\n                      height=\"80\"\r\n                    ></img>\r\n                  </div>\r\n                  <div className=\"description\">\r\n                    <div style={{ fontWeight: \"bold\" }}>{item.title}</div>\r\n                    <div>\r\n                      {item.size} | {item.style}\r\n                    </div>\r\n                    <div className=\"description-number\">\r\n                      <div>${item.price.toFixed(2)} </div>\r\n                      <InputNumber\r\n                        value={item.count}\r\n                        onChange={(value) =>\r\n                          this.handleChangeCount(value, item)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div style={{ height: \"100px\" }}>\r\n            {carts && (\r\n              <div>\r\n                <div>\r\n                  <div>\r\n                    <h1>\r\n                      共计：$\r\n                      {carts\r\n                        ?.reduce(\r\n                          (init, item) => init + item.count * item.price,\r\n                          0\r\n                        )\r\n                        .toFixed(2) || 0}\r\n                    </h1>\r\n                  </div>\r\n                </div>\r\n                <Button\r\n                  type=\"primary\"\r\n                  style={{ width: \"100%\", marginTop: \"5px\" }}\r\n                  onClick={this.handleClearCart.bind(this)}\r\n                >\r\n                  结账\r\n                </Button>\r\n                <Button\r\n                  type=\"primary\"\r\n                  danger\r\n                  style={{ width: \"100%\", marginTop: \"5px\" }}\r\n                  onClick={this.handleClearCart.bind(this)}\r\n                >\r\n                  清空购物车\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Drawer>\r\n        <Row justify=\"space-between\">\r\n          <Col span={12}>\r\n            <GithubOutlined style={{ fontSize: \"48px\", margin: \"20px\" }} />\r\n          </Col>\r\n          <Col span={12} style={{ textAlign: \"right\" }}>\r\n            <div style={{ padding: \"20px\", boxSizing: \"border-box\" }}>\r\n              <Badge\r\n                count={carts?.reduce((init, item) => {\r\n                  return init + item.count;\r\n                }, 0)}\r\n              >\r\n                <ShoppingCartOutlined\r\n                  style={{ fontSize: \"48px\", cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    this.setState({ visible: true });\r\n                  }}\r\n                />\r\n              </Badge>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={0} lg={4} md={6} xl={6} xxl={6}>\r\n            <div className=\"size-map\">\r\n              <h2>Size:</h2>\r\n              {size.map((item, index) => {\r\n                return (\r\n                  <div\r\n                    key={item}\r\n                    className={`size-item ${\r\n                      index === active ? \"size-item-active\" : \"\"\r\n                    }`}\r\n                    onClick={this.handleChooseSize.bind(this, item, index)}\r\n                  >\r\n                    {item}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </Col>\r\n          <Col xs={24} lg={20} md={18} xl={18} xxl={18}>\r\n            <Row>\r\n              {products.map((item, index) => {\r\n                return (\r\n                  <Col xs={24} md={12} lg={12} xl={8} xxl={6} key={index}>\r\n                    <ShopCard {...item}></ShopCard>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShopCart);\r\n"],"sourceRoot":""}